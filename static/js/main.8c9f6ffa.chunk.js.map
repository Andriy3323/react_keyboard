{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","setKey","btn","setState","document","addEventListener","this","removeEventListener","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,2BAFT,EAaEC,OAAS,SAACC,GACR,EAAKC,SAAqB,MAAZD,EAAIF,IACd,CAAEA,IAAK,SACP,CAAEA,IAAKE,EAAIF,OAhBnB,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,UAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,UAV/C,oBAmBE,WACE,OACE,8BACGK,KAAKP,MAAMC,UAtBpB,GAAyBQ,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.8c9f6ffa.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    key: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.setKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.setKey);\n  }\n\n  setKey = (btn: KeyboardEvent) => {\n    this.setState(btn.key === ' '\n      ? { key: 'Space' }\n      : { key: btn.key });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div>\n        {this.state.key}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}